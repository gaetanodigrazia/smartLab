{"version":3,"sources":["./src/app/pages/technician_view/booking-list/booking-list.component.ts","./src/app/pages/technician_view/booking-list/booking-list.component.html","./src/app/pages/technician_view/button/charge-report-status-button/charge-report-status-button.component.ts","./src/app/pages/technician_view/button/charge-report-status-button/charge-report-status-button.component.html","./src/app/pages/technician_view/button/delete-booking-button/delete-booking-button.component.ts","./src/app/pages/technician_view/button/delete-booking-button/delete-booking-button.component.html","./src/app/pages/technician_view/button/show-citizen-button/show-citizen-button.component.ts","./src/app/pages/technician_view/button/show-citizen-button/show-citizen-button.component.html","./src/app/pages/technician_view/button/show-medical-service-button/show-medical-service-button.component.ts","./src/app/pages/technician_view/button/show-medical-service-button/show-medical-service-button.component.html","./src/app/pages/technician_view/button/show-report-status/show-report-status.component.ts","./src/app/pages/technician_view/button/show-report-status/show-report-status.component.html","./src/app/pages/technician_view/modal_window/charge-report-modal-window/charge-report-modal-window.component.ts","./src/app/pages/technician_view/modal_window/charge-report-modal-window/charge-report-modal-window.component.html","./src/app/pages/technician_view/modal_window/show-citizen-modal-window/show-citizen-modal-window.component.ts","./src/app/pages/technician_view/modal_window/show-citizen-modal-window/show-citizen-modal-window.component.html","./src/app/pages/technician_view/modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component.ts","./src/app/pages/technician_view/modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component.html","./src/app/pages/technician_view/module/booking-list.module.ts","./src/app/pages/technician_view/routing/booking-list-routing.module.ts"],"names":[],"mappings":"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","file":"src_app_pages_technician_view_module_booking-list_module_ts-es2015.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { BookingService } from '../../../shared/booking.service';\nimport { Booking } from '../../../model/booking';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { DatePipe } from '@angular/common';\nimport { NbDialogService } from '@nebular/theme';\nimport { ShowCitizenButtonComponent } from '../button/show-citizen-button/show-citizen-button.component';\nimport { ShowMedicalServiceButtonComponent } from '../button/show-medical-service-button/show-medical-service-button.component';\nimport { Citizen } from '../../../model/citizen';\nimport { ChargeReportStatusButtonComponent } from '../button/charge-report-status-button/charge-report-status-button.component';\nimport { ShowReportStatusComponent } from '../button/show-report-status/show-report-status.component';\nimport { DeleteBookingButtonComponent } from '../button/delete-booking-button/delete-booking-button.component';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'booking-list',\n  templateUrl: './booking-list.component.html',\n  styleUrls: ['./booking-list.component.scss'],\n})\nexport class BookingListComponent implements OnInit {\n  booking: Booking[];\n  to_query_status: number;\n  private sub: any;\n  @Input() value;\n\n  settings = {\n    actions: {\n      add: false,\n      edit: false,\n      delete: false,\n    },\n    columns: {\n      dataPrenotazione: {\n        title: 'Data prenotazione',\n        type: 'string',\n        filter: false,\n        valuePrepareFunction: (date) => {\n          var raw = new Date(date);\n          var formatted = new DatePipe('en-EN').transform(raw, 'dd/MM/yyyy ore hh:mm');\n          return formatted;\n        }\n      },\n      // oraPrenotazione: {\n      //   title: 'Ora prenotazione',\n      //   type: 'string',\n      //   valuePrepareFunction: (date) => {\n      //     console.log(date)\n      //     return date;\n      //   },\n      //   filter: false\n      // },\n      status: {\n        title: 'Status',\n        type: \"custom\",\n        valuePrepareFunction: (cell, row) => {\n          return row;\n        },\n        renderComponent: ChargeReportStatusButtonComponent,\n        filter: false\n      },\n      codicePrenotazione: {\n        title: 'Codice prenotazione',\n        type: 'string',\n      },\n      dataEsecuzione: {\n        title: 'Data esecuzione',\n        type: 'custom',\n        valuePrepareFunction: (cell, row) => {\n          return row;\n        },\n        renderComponent: ShowReportStatusComponent,\n        filter: false\n      },\n      prestazione: {\n        title: 'Prestazione',\n        type: 'custom',\n        valuePrepareFunction: (cell, row) => {\n          return row.prestazione.nome;\n        },\n        renderComponent: ShowMedicalServiceButtonComponent,\n        filterFunction(cell?: Booking, search?: Booking): boolean {\n          if (cell >= search || search === null) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      },\n      cittadino: {\n        title: 'Cittadino',\n        type: 'custom',\n        valuePrepareFunction: (cell, row) => {\n          return row.cittadino.ssn;\n        },\n        renderComponent: ShowCitizenButtonComponent,\n        filterFunction(cell?: Citizen, search?: string): boolean {\n          console.log(cell);\n          console.log(search);\n          if (cell.ssn >= search || search === null) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      },\n      elimina: {\n        title: 'Elimina',\n        type: 'custom',\n        filter: false,\n        valuePrepareFunction: (cell, row) => {\n          return row.id;\n        },\n        renderComponent: DeleteBookingButtonComponent\n      },\n    },\n\n  };\n  source: LocalDataSource = new LocalDataSource();\n  data: Booking[];\n\n  constructor(private bookingService: BookingService, private dialogService: NbDialogService, private route: ActivatedRoute, private router: Router) {\n    route.params.subscribe(params => {\n      if (params['status'] === \"active\") {\n        this.to_query_status = 0;\n      } else {\n        this.to_query_status = 1;\n      };\n      console.log(params)\n    });\n    /*This do the trick!*/\n    router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n  ngOnInit(): void {\n\n    this.bookingService.getBookingsByStatus(this.to_query_status).subscribe(booking => {\n      this.booking = booking;\n      console.log(this.booking);\n      this.source.load(this.booking);\n    });\n\n  }\n}\nfunction Schemas(arg0: {}) {\n  throw new Error('Function not implemented.');\n}\n","<nb-card>\n    <nb-card-header>\n        Lista prenotazioni\n    </nb-card-header>\n\n    <nb-card-body>\n        <ng2-smart-table [settings]=\"settings\" [source]=\"source\">\n        </ng2-smart-table>\n    </nb-card-body>\n</nb-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { Booking } from '../../../../model/booking';\nimport { ChargeReportModalWindowComponent } from '../../modal_window/charge-report-modal-window/charge-report-modal-window.component';\nimport { ShowMedicalServiceModalWindowComponent } from '../../modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component';\n\n@Component({\n  selector: 'ngx-charge-report-status',\n  templateUrl: './charge-report-status-button.component.html',\n  styleUrls: ['./charge-report-status-button.component.scss']\n})\nexport class ChargeReportStatusButtonComponent implements OnInit {\n  button_css_status: string;\n  disabled: boolean;\n  renderValue: string;\n  getFunction: boolean;\n  @Input() value = {} as Booking;\n\n  constructor(private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    if (this.value.status == 0) {\n      this.renderValue = 'Carica report';\n      this.button_css_status = \"warning\";\n      this.getFunction = true;\n    } else {\n      this.renderValue = 'Eseguita';\n      this.button_css_status = \"info\";\n      this.getFunction = false;\n    }\n  }\n  onPressed(value) {\n    if (value == true) {\n      this.dialogService.open(ChargeReportModalWindowComponent, {\n        context: {\n          toDialog: this.value\n        },\n      });\n    }\n    //.onClose.subscribe(name => name && this.names.push(name));\n  }\n}\n","<button nbButton [status]=\"button_css_status\" fullWidth\n    (click)=\"onPressed(getFunction)\">\n    {{renderValue}}</button>","import { Component, Input, OnInit } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { BookingService } from '../../../../shared/booking.service';\n\n@Component({\n  selector: 'ngx-delete-booking-button',\n  templateUrl: './delete-booking-button.component.html',\n  styleUrls: ['./delete-booking-button.component.scss']\n})\nexport class DeleteBookingButtonComponent implements OnInit {\n  citizen_id: number;\n  @Input() value: number;\n  constructor(private dialogService: NbDialogService, private booking_service: BookingService) { }\n\n  ngOnInit() {\n    this.citizen_id = this.value;\n  }\n  newBookingFromCitizen() {\n    if (confirm(\"Vuoi davvero salvare le modifiche?\")) {\n      this.booking_service.deleteBooking(this.citizen_id);\n      console.log(\"Confirmed delete\")\n    }\n  }\n}","<button nbButton status=\"danger\" (click)=\"newBookingFromCitizen()\">\n    <nb-icon class=\"action-icon\" icon=\"trash-outline\"></nb-icon>\n</button>","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { ShowCitizenModalWindowComponent } from '../../modal_window/show-citizen-modal-window/show-citizen-modal-window.component';\n@Component({\n  selector: 'ngx-show-citizen-button',\n  templateUrl: './show-citizen-button.component.html',\n  styleUrls: ['./show-citizen-button.component.scss']\n})\nexport class ShowCitizenButtonComponent implements OnInit {\n  renderValue: string;\n  @Input() value: string | number;\n  constructor(private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    this.renderValue = this.value.toString();\n  }\n  onShowCitizenPressed() {\n    this.dialogService.open(ShowCitizenModalWindowComponent, {\n      context: {\n        toDialogSSN: this.value\n      },\n    }); /**\n    .onClose.subscribe(returnedObj => {\n      if (returnedObj == false) { } else {\n        if (confirm(\"Vuoi davvero salvare le modifiche?\")) {\n          \n        }\n      }\n      console.log(returnedObj);\n    }); */\n  }\n}\n","<button nbButton status=\"info\" (click)=\"onShowCitizenPressed()\"> {{renderValue}}</button>","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { EventEmitter } from '@angular/core';\nimport { ShowMedicalServiceModalWindowComponent } from '../../modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component';\n@Component({\n  selector: 'ngx-show-medical-service-button',\n  templateUrl: './show-medical-service-button.component.html',\n  styleUrls: ['./show-medical-service-button.component.scss']\n})\nexport class ShowMedicalServiceButtonComponent implements OnInit {\n  renderValue: string;\n  @Input() value: string | number;\n\n  constructor(private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    this.renderValue = this.value.toString();\n  }\n  onShowMedicalService(value) {\n    this.dialogService.open(ShowMedicalServiceModalWindowComponent, {\n      context: {\n        toDialogMedicalServiceName: this.value\n      },\n    });\n    //.onClose.subscribe(name => name && this.names.push(name));\n  }\n}\n","<button nbButton status=\"info\" fullWidth (click)=\"onShowMedicalService($event)\">{{renderValue}}</button>","import { Component, OnInit, Input } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { Booking } from '../../../../model/booking';\nimport { ChargeReportModalWindowComponent } from '../../modal_window/charge-report-modal-window/charge-report-modal-window.component';\nimport { ShowMedicalServiceModalWindowComponent } from '../../modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component';\n\n@Component({\n  selector: 'ngx-show-report-status',\n  templateUrl: './show-report-status.component.html',\n  styleUrls: ['./show-report-status.component.scss']\n})\nexport class ShowReportStatusComponent implements OnInit {\n  button_css_status: string;\n  isDisabled: boolean;\n  renderValue: string;\n  getFunction: boolean;\n  @Input() value: Booking;\n  constructor(private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    if (this.value.dataEsecuzione == null) {\n      this.renderValue = 'Da Eseguire';\n      this.button_css_status = \"warning\";\n      this.getFunction = true;\n    } else {\n      //this.isDisabled = true;\n      this.renderValue = this.value.dataEsecuzione;\n      this.button_css_status = \"info\";\n      this.getFunction = false;\n    }\n  }\n  onShowCitizenPressed(value) {\n    if (value == false) {\n      this.dialogService.open(ChargeReportModalWindowComponent, {\n        context: {\n          toDialog: this.value\n        },\n      });\n    }\n    //.onClose.subscribe(name => name && this.names.push(name));\n  }\n}\n","<button nbButton [status]=\"button_css_status\" [disabled]=\"isDisabled\" fullWidth\n    (click)=\"onShowCitizenPressed(getFunction)\">\n    {{renderValue}}</button>","import { Component, Input, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { isThisTypeNode } from 'typescript';\nimport { Booking } from '../../../../model/booking';\nimport { Citizen } from '../../../../model/citizen';\nimport { BookingService } from '../../../../shared/booking.service';\nimport { ShowCitizenModalWindowComponent } from '../show-citizen-modal-window/show-citizen-modal-window.component';\n\n@Component({\n  selector: 'ngx-charge-report-modal-window',\n  templateUrl: './charge-report-modal-window.component.html',\n  styleUrls: ['./charge-report-modal-window.component.scss']\n})\nexport class ChargeReportModalWindowComponent implements OnInit {\n  source: LocalDataSource = new LocalDataSource();\n  citizen: Citizen | any = \"\";\n  disabled: boolean;\n  constructor(protected ref: NbDialogRef<ShowCitizenModalWindowComponent>, private booking_service: BookingService) { \n  }\n  @Input() toDialog: Booking;\n\n  ngOnInit(): void {\n    console.log(\"Lo stato in charge report modal window è \" + this.toDialog.status)\n    if (this.toDialog.status == 1) {\n      this.disabled = true;\n    }\n    // this.booking_service.getBookingsById(this.toDialogSSN).subscribe(result => {\n    //   this.citizen = result;\n    //   console.log(this.citizen);\n    //   console.log(this.citizen.ref_categoria);\n    // });\n  }\n  cancel() {\n    this.ref.close(false);\n  }\n\n  submit(firstname, lastname, email, cellphone) {\n    this.citizen.firstname = firstname;\n    this.citizen.lastname = lastname;\n    this.citizen.email = email;\n    this.citizen.cellphone = cellphone;\n    if (confirm(\"Vuoi davvero salvare le modifiche?\")) {\n      //this.citizen_service.updateCitizen(this.citizen).subscribe(() => this.ref.close());\n\n    }\n\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Inserisci report</nb-card-header>\n    <nb-card-body [(ngModel)]=\"toDialog\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputFirstName\" class=\"label\">Nome</label>\n                    <input #firstname type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputFirstName\"\n                        placeholder=\"First Name\" value={{toDialog.cittadino}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputLastName\" class=\"label\">Cognome</label>\n                    <input #lastname type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputLastName\"\n                        placeholder=\"Last Name\" value={{toDialog.cittadino}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Codice fiscale</label>\n                    <input #email type=\"email\" [disabled]=disabled nbInput fullWidth id=\"inputEmail\" placeholder=\"Email\"\n                        value={{toDialog.cittadino}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Codice prenotazione</label>\n                    <input #cellphone type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputWebsite\"\n                        placeholder=\"Website\" value={{toDialog.codicePrenotazione}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Prestazione</label>\n                    <input #indirizzo [disabled]=disabled type=\"email\" nbInput fullWidth placeholder=\"Indirizzo\"\n                        value=\"{{toDialog.prestazione}}\">\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Codice fiscale medico</label>\n                    <input #SSN_medico type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputSSN\"\n                        placeholder=\"Codice fiscale\" value={{citizen.ssn}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Data esecuzione</label>\n                    <input #indirizzo [disabled]=disabled type=\"email\" nbInput fullWidth placeholder=\"Indirizzo\"\n                        value=\"{{toDialog.prestazione}}\">\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Ora esecuzione</label>\n                    <input #SSN_medico type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputSSN\"\n                        placeholder=\"Codice fiscale\" value={{citizen.ssn}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <textarea rows=\"5\" #sintesi [disabled]=disabled nbInput fullWidth shape=\"round\"\n                placeholder=\"Commento alla prestazione\"></textarea>\n        </div>\n    </nb-card-body>\n    <nb-card-footer>\n        <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Indietro</button>\n        <button nbButton status=\"success\" [disabled]=disabled\n            (click)=\"submit(firstname.value, lastname.value, email.value, cellphone.value)\"> Inserisci</button>\n    </nb-card-footer>\n</nb-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Citizen } from '../../../../model/citizen';\nimport { CitizenService } from '../../../../shared/citizen.service';\n\n@Component({\n  selector: 'ngx-show-citizen-modal-window',\n  templateUrl: './show-citizen-modal-window.component.html',\n  styleUrls: ['./show-citizen-modal-window.component.scss']\n})\nexport class ShowCitizenModalWindowComponent implements OnInit {\n  source: LocalDataSource = new LocalDataSource();\n  citizen: Citizen | any = \"\";// Mi restituiva errori nella console per via del fatto che il cittadino viene fetchato\n  // qualche secondo dopo e risultava essere undefined quindi l'ho inizializzato\n  constructor(protected ref: NbDialogRef<ShowCitizenModalWindowComponent>, private citizen_service: CitizenService) { }\n  @Input() toDialogSSN: any;\n\n  ngOnInit(): void {\n    this.citizen_service.getBySSN(this.toDialogSSN).subscribe(result => {\n      this.citizen = result;\n      console.log(this.citizen);\n      console.log(this.citizen.ref_categoria);\n    });\n  }\n  cancel() {\n    this.ref.close(false);\n  }\n\n  submit(firstname, lastname, email, cellphone) {\n    this.citizen.firstname = firstname;\n    this.citizen.lastname = lastname;\n    this.citizen.email = email;\n    this.citizen.cellphone = cellphone;\n    if (confirm(\"Vuoi davvero salvare le modifiche?\")) {\n      this.citizen_service.updateCitizen(this.citizen).subscribe(() => this.ref.close());\n\n    }\n\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Dettagli cittadino</nb-card-header>\n    <nb-card-body [(ngModel)]=\"citizen\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputFirstName\" class=\"label\">Nome</label>\n                    <input #firstname type=\"text\" disabled nbInput fullWidth id=\"inputFirstName\"\n                        placeholder=\"First Name\" value={{citizen.nome}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputLastName\" class=\"label\">Cognome</label>\n                    <input #lastname type=\"text\" disabled nbInput fullWidth id=\"inputLastName\" placeholder=\"Last Name\"\n                        value={{citizen.cognome}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Email</label>\n                    <input #email type=\"email\" disabled nbInput fullWidth id=\"inputEmail\" placeholder=\"Email\"\n                        value={{citizen.email}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Cellulare</label>\n                    <input #cellphone type=\"text\" disabled nbInput fullWidth id=\"inputWebsite\" placeholder=\"Website\"\n                        value={{citizen.telefono}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Indirizzo</label>\n                    <input #indirizzo disabled type=\"email\" nbInput fullWidth placeholder=\"Indirizzo\"\n                        value=\"via {{citizen.via}} {{citizen.civico}}, {{citizen.comune}}\">\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Codice fiscale</label>\n                    <input #SSN type=\"text\" disabled nbInput fullWidth id=\"inputSSN\" placeholder=\"Codice fiscale\"\n                        value={{citizen.ssn}}>\n                </div>\n            </div>\n        </div>\n    </nb-card-body>\n    <nb-card-footer>\n        <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Indietro</button>\n        <button nbButton status=\"success\" disabled\n            (click)=\"submit(firstname.value, lastname.value, email.value, cellphone.value)\">Salva</button>\n    </nb-card-footer>\n</nb-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { MedicalService } from '../../../../model/medical_service';\nimport { MedicalServiceService } from '../../../../shared/medical_service.service';\n@Component({\n  selector: 'ngx-show-medical-service-modal-window',\n  templateUrl: './show-medical-service-modal-window.component.html',\n  styleUrls: ['./show-medical-service-modal-window.component.scss']\n})\nexport class ShowMedicalServiceModalWindowComponent implements OnInit {\n  medicalservice: MedicalService | any = \"\";\n  source: LocalDataSource = new LocalDataSource();\n  @Input() toDialogMedicalServiceName: any;\n\n  constructor(protected ref: NbDialogRef<ShowMedicalServiceModalWindowComponent>, private medicalservice_service: MedicalServiceService) { }\n  names: string[] = [];\n\n\n  ngOnInit(): void {\n    this.medicalservice_service.getByName(this.toDialogMedicalServiceName).subscribe(result => {\n      this.medicalservice = result;\n      console.log(this.medicalservice);\n    });\n  }\n  cancel() {\n    this.ref.close();\n  }\n\n  submit(name) {\n    this.ref.close(name);\n  }\n}","<nb-card>\n    <nb-card-header>Dettagli prestazione</nb-card-header>\n    <nb-card-body [(ngModel)]=\"medicalservice\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputFirstName\" class=\"label\">Prestazione</label>\n                    <input #nome type=\"text\" nbInput fullWidth id=\"inputFirstName\" placeholder=\"First Name\"\n                        value={{medicalservice.nome}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputLastName\" class=\"label\">Costo</label>\n                    <input #costo disabled type=\"text\" nbInput fullWidth id=\"inputLastName\" placeholder=\"Last Name\"\n                        value={{medicalservice.costo}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Quantità</label>\n                    <input #giacenza disabled type=\"email\" nbInput fullWidth id=\"inputEmail\" placeholder=\"Email\"\n                        value={{medicalservice.giacenza}}>\n                </div>\n            </div>\n        </div>\n    </nb-card-body>\n    <nb-card-footer>\n        <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Indietro</button>\n        <button nbButton status=\"success\" (click)=\"submit(nome.value)\">Salva</button>\n    </nb-card-footer>\n</nb-card>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BookingListRoutingModule, routedComponents } from '../routing/booking-list-routing.module';\nimport { NbButtonModule, NbCardModule, NbIconModule, NbInputModule } from '@nebular/theme';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\nimport { ShowCitizenButtonComponent } from '../button/show-citizen-button/show-citizen-button.component';\nimport { ShowMedicalServiceButtonComponent } from '../button/show-medical-service-button/show-medical-service-button.component';\n\nimport { ShowCitizenModalWindowComponent } from '../modal_window/show-citizen-modal-window/show-citizen-modal-window.component';\nimport { ShowMedicalServiceModalWindowComponent } from '../modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component';\nimport { ChargeReportStatusButtonComponent } from '../button/charge-report-status-button/charge-report-status-button.component';\nimport { ShowReportStatusComponent } from '../button/show-report-status/show-report-status.component';\nimport { DeleteBookingButtonComponent } from '../button/delete-booking-button/delete-booking-button.component';\nimport { ChargeReportModalWindowComponent } from '../modal_window/charge-report-modal-window/charge-report-modal-window.component';\n\n@NgModule({\n  declarations: [...routedComponents,\n    ShowCitizenButtonComponent, ShowMedicalServiceButtonComponent,\n    ShowCitizenModalWindowComponent, ShowMedicalServiceModalWindowComponent,\n    ChargeReportStatusButtonComponent, ShowReportStatusComponent,\n    DeleteBookingButtonComponent, ChargeReportModalWindowComponent],\n\n  imports: [\n    CommonModule, BookingListRoutingModule, NbCardModule, Ng2SmartTableModule, NbButtonModule, NbIconModule, NbInputModule,\n  ],\n  exports: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class BookingListModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BookingListComponent } from '../booking-list/booking-list.component';\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    component: BookingListComponent,\r\n    children: [\r\n    ],\r\n},\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class BookingListRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n    BookingListComponent,\r\n];\r\n"],"sourceRoot":"webpack:///"}
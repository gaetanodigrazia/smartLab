{"version":3,"sources":["webpack:///src/app/pages/technician_view/booking-list/booking-list.component.ts","webpack:///src/app/pages/technician_view/booking-list/booking-list.component.html","webpack:///src/app/pages/technician_view/button/charge-report-status-button/charge-report-status-button.component.ts","webpack:///src/app/pages/technician_view/button/charge-report-status-button/charge-report-status-button.component.html","webpack:///src/app/pages/technician_view/button/delete-booking-button/delete-booking-button.component.ts","webpack:///src/app/pages/technician_view/button/delete-booking-button/delete-booking-button.component.html","webpack:///src/app/pages/technician_view/button/show-citizen-button/show-citizen-button.component.ts","webpack:///src/app/pages/technician_view/button/show-citizen-button/show-citizen-button.component.html","webpack:///src/app/pages/technician_view/button/show-medical-service-button/show-medical-service-button.component.ts","webpack:///src/app/pages/technician_view/button/show-medical-service-button/show-medical-service-button.component.html","webpack:///src/app/pages/technician_view/button/show-report-status/show-report-status.component.ts","webpack:///src/app/pages/technician_view/button/show-report-status/show-report-status.component.html","webpack:///src/app/pages/technician_view/modal_window/charge-report-modal-window/charge-report-modal-window.component.ts","webpack:///src/app/pages/technician_view/modal_window/charge-report-modal-window/charge-report-modal-window.component.html","webpack:///src/app/pages/technician_view/modal_window/show-citizen-modal-window/show-citizen-modal-window.component.ts","webpack:///src/app/pages/technician_view/modal_window/show-citizen-modal-window/show-citizen-modal-window.component.html","webpack:///src/app/pages/technician_view/modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component.ts","webpack:///src/app/pages/technician_view/modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component.html","webpack:///src/app/pages/technician_view/module/booking-list.module.ts","webpack:///src/app/pages/technician_view/routing/booking-list-routing.module.ts"],"names":["BookingListComponent","bookingService","dialogService","route","router","settings","actions","add","edit","columns","dataPrenotazione","title","type","filter","valuePrepareFunction","date","raw","Date","formatted","DatePipe","transform","status","cell","row","renderComponent","ChargeReportStatusButtonComponent","codicePrenotazione","dataEsecuzione","ShowReportStatusComponent","prestazione","nome","ShowMedicalServiceButtonComponent","filterFunction","search","cittadino","ssn","ShowCitizenButtonComponent","console","log","elimina","id","DeleteBookingButtonComponent","source","LocalDataSource","params","subscribe","to_query_status","routeReuseStrategy","shouldReuseRoute","getBookingsByStatus","booking","load","Schemas","arg0","Error","value","renderValue","button_css_status","getFunction","open","ChargeReportModalWindowComponent","context","toDialog","onPressed","booking_service","citizen_id","confirm","deleteBooking","newBookingFromCitizen","toString","ShowCitizenModalWindowComponent","toDialogSSN","onShowCitizenPressed","ShowMedicalServiceModalWindowComponent","toDialogMedicalServiceName","onShowMedicalService","ref","citizen","disabled","close","firstname","lastname","email","cellphone","cancel","submit","citizen_service","getBySSN","result","ref_categoria","updateCitizen","medicalservice_service","medicalservice","names","getByName","name","BookingListModule","CommonModule","BookingListRoutingModule","NbCardModule","Ng2SmartTableModule","NbButtonModule","NbIconModule","NbInputModule","routes","path","component","children","RouterModule","routedComponents"],"mappings":"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","file":"src_app_pages_technician_view_module_booking-list_module_ts-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { BookingService } from '../../../shared/booking.service';\nimport { Booking } from '../../../model/booking';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { DatePipe } from '@angular/common';\nimport { NbDialogService } from '@nebular/theme';\nimport { ShowCitizenButtonComponent } from '../button/show-citizen-button/show-citizen-button.component';\nimport { ShowMedicalServiceButtonComponent } from '../button/show-medical-service-button/show-medical-service-button.component';\nimport { Citizen } from '../../../model/citizen';\nimport { ChargeReportStatusButtonComponent } from '../button/charge-report-status-button/charge-report-status-button.component';\nimport { ShowReportStatusComponent } from '../button/show-report-status/show-report-status.component';\nimport { DeleteBookingButtonComponent } from '../button/delete-booking-button/delete-booking-button.component';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'booking-list',\n  templateUrl: './booking-list.component.html',\n  styleUrls: ['./booking-list.component.scss'],\n})\nexport class BookingListComponent implements OnInit {\n  booking: Booking[];\n  to_query_status: number;\n  private sub: any;\n  @Input() value;\n\n  settings = {\n    actions: {\n      add: false,\n      edit: false,\n      delete: false,\n    },\n    columns: {\n      dataPrenotazione: {\n        title: 'Data prenotazione',\n        type: 'string',\n        filter: false,\n        valuePrepareFunction: (date) => {\n          var raw = new Date(date);\n          var formatted = new DatePipe('en-EN').transform(raw, 'dd/MM/yyyy ore hh:mm');\n          return formatted;\n        }\n      },\n      // oraPrenotazione: {\n      //   title: 'Ora prenotazione',\n      //   type: 'string',\n      //   valuePrepareFunction: (date) => {\n      //     console.log(date)\n      //     return date;\n      //   },\n      //   filter: false\n      // },\n      status: {\n        title: 'Status',\n        type: \"custom\",\n        valuePrepareFunction: (cell, row) => {\n          return row;\n        },\n        renderComponent: ChargeReportStatusButtonComponent,\n        filter: false\n      },\n      codicePrenotazione: {\n        title: 'Codice prenotazione',\n        type: 'string',\n      },\n      dataEsecuzione: {\n        title: 'Data esecuzione',\n        type: 'custom',\n        valuePrepareFunction: (cell, row) => {\n          return row;\n        },\n        renderComponent: ShowReportStatusComponent,\n        filter: false\n      },\n      prestazione: {\n        title: 'Prestazione',\n        type: 'custom',\n        valuePrepareFunction: (cell, row) => {\n          return row.prestazione.nome;\n        },\n        renderComponent: ShowMedicalServiceButtonComponent,\n        filterFunction(cell?: Booking, search?: Booking): boolean {\n          if (cell >= search || search === null) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      },\n      cittadino: {\n        title: 'Cittadino',\n        type: 'custom',\n        valuePrepareFunction: (cell, row) => {\n          return row.cittadino.ssn;\n        },\n        renderComponent: ShowCitizenButtonComponent,\n        filterFunction(cell?: Citizen, search?: string): boolean {\n          console.log(cell);\n          console.log(search);\n          if (cell.ssn >= search || search === null) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      },\n      elimina: {\n        title: 'Elimina',\n        type: 'custom',\n        filter: false,\n        valuePrepareFunction: (cell, row) => {\n          return row.id;\n        },\n        renderComponent: DeleteBookingButtonComponent\n      },\n    },\n\n  };\n  source: LocalDataSource = new LocalDataSource();\n  data: Booking[];\n\n  constructor(private bookingService: BookingService, private dialogService: NbDialogService, private route: ActivatedRoute, private router: Router) {\n    route.params.subscribe(params => {\n      if (params['status'] === \"active\") {\n        this.to_query_status = 0;\n      } else {\n        this.to_query_status = 1;\n      };\n      console.log(params)\n    });\n    /*This do the trick!*/\n    router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n  ngOnInit(): void {\n\n    this.bookingService.getBookingsByStatus(this.to_query_status).subscribe(booking => {\n      this.booking = booking;\n      console.log(this.booking);\n      this.source.load(this.booking);\n    });\n\n  }\n}\nfunction Schemas(arg0: {}) {\n  throw new Error('Function not implemented.');\n}\n","<nb-card>\n    <nb-card-header>\n        Lista prenotazioni\n    </nb-card-header>\n\n    <nb-card-body>\n        <ng2-smart-table [settings]=\"settings\" [source]=\"source\">\n        </ng2-smart-table>\n    </nb-card-body>\n</nb-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { Booking } from '../../../../model/booking';\nimport { ChargeReportModalWindowComponent } from '../../modal_window/charge-report-modal-window/charge-report-modal-window.component';\nimport { ShowMedicalServiceModalWindowComponent } from '../../modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component';\n\n@Component({\n  selector: 'ngx-charge-report-status',\n  templateUrl: './charge-report-status-button.component.html',\n  styleUrls: ['./charge-report-status-button.component.scss']\n})\nexport class ChargeReportStatusButtonComponent implements OnInit {\n  button_css_status: string;\n  disabled: boolean;\n  renderValue: string;\n  getFunction: boolean;\n  @Input() value = {} as Booking;\n\n  constructor(private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    if (this.value.status == 0) {\n      this.renderValue = 'Carica report';\n      this.button_css_status = \"warning\";\n      this.getFunction = true;\n    } else {\n      this.renderValue = 'Eseguita';\n      this.button_css_status = \"info\";\n      this.getFunction = false;\n    }\n  }\n  onPressed(value) {\n    if (value == true) {\n      this.dialogService.open(ChargeReportModalWindowComponent, {\n        context: {\n          toDialog: this.value\n        },\n      });\n    }\n    //.onClose.subscribe(name => name && this.names.push(name));\n  }\n}\n","<button nbButton [status]=\"button_css_status\" fullWidth\n    (click)=\"onPressed(getFunction)\">\n    {{renderValue}}</button>","import { Component, Input, OnInit } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { BookingService } from '../../../../shared/booking.service';\n\n@Component({\n  selector: 'ngx-delete-booking-button',\n  templateUrl: './delete-booking-button.component.html',\n  styleUrls: ['./delete-booking-button.component.scss']\n})\nexport class DeleteBookingButtonComponent implements OnInit {\n  citizen_id: number;\n  @Input() value: number;\n  constructor(private dialogService: NbDialogService, private booking_service: BookingService) { }\n\n  ngOnInit() {\n    this.citizen_id = this.value;\n  }\n  newBookingFromCitizen() {\n    if (confirm(\"Vuoi davvero salvare le modifiche?\")) {\n      this.booking_service.deleteBooking(this.citizen_id);\n      console.log(\"Confirmed delete\")\n    }\n  }\n}","<button nbButton status=\"danger\" (click)=\"newBookingFromCitizen()\">\n    <nb-icon class=\"action-icon\" icon=\"trash-outline\"></nb-icon>\n</button>","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { ShowCitizenModalWindowComponent } from '../../modal_window/show-citizen-modal-window/show-citizen-modal-window.component';\n@Component({\n  selector: 'ngx-show-citizen-button',\n  templateUrl: './show-citizen-button.component.html',\n  styleUrls: ['./show-citizen-button.component.scss']\n})\nexport class ShowCitizenButtonComponent implements OnInit {\n  renderValue: string;\n  @Input() value: string | number;\n  constructor(private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    this.renderValue = this.value.toString();\n  }\n  onShowCitizenPressed() {\n    this.dialogService.open(ShowCitizenModalWindowComponent, {\n      context: {\n        toDialogSSN: this.value\n      },\n    }); /**\n    .onClose.subscribe(returnedObj => {\n      if (returnedObj == false) { } else {\n        if (confirm(\"Vuoi davvero salvare le modifiche?\")) {\n          \n        }\n      }\n      console.log(returnedObj);\n    }); */\n  }\n}\n","<button nbButton status=\"info\" (click)=\"onShowCitizenPressed()\"> {{renderValue}}</button>","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { EventEmitter } from '@angular/core';\nimport { ShowMedicalServiceModalWindowComponent } from '../../modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component';\n@Component({\n  selector: 'ngx-show-medical-service-button',\n  templateUrl: './show-medical-service-button.component.html',\n  styleUrls: ['./show-medical-service-button.component.scss']\n})\nexport class ShowMedicalServiceButtonComponent implements OnInit {\n  renderValue: string;\n  @Input() value: string | number;\n\n  constructor(private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    this.renderValue = this.value.toString();\n  }\n  onShowMedicalService(value) {\n    this.dialogService.open(ShowMedicalServiceModalWindowComponent, {\n      context: {\n        toDialogMedicalServiceName: this.value\n      },\n    });\n    //.onClose.subscribe(name => name && this.names.push(name));\n  }\n}\n","<button nbButton status=\"info\" fullWidth (click)=\"onShowMedicalService($event)\">{{renderValue}}</button>","import { Component, OnInit, Input } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { Booking } from '../../../../model/booking';\nimport { ChargeReportModalWindowComponent } from '../../modal_window/charge-report-modal-window/charge-report-modal-window.component';\nimport { ShowMedicalServiceModalWindowComponent } from '../../modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component';\n\n@Component({\n  selector: 'ngx-show-report-status',\n  templateUrl: './show-report-status.component.html',\n  styleUrls: ['./show-report-status.component.scss']\n})\nexport class ShowReportStatusComponent implements OnInit {\n  button_css_status: string;\n  isDisabled: boolean;\n  renderValue: string;\n  getFunction: boolean;\n  @Input() value: Booking;\n  constructor(private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    if (this.value.dataEsecuzione == null) {\n      this.renderValue = 'Da Eseguire';\n      this.button_css_status = \"warning\";\n      this.getFunction = true;\n    } else {\n      //this.isDisabled = true;\n      this.renderValue = this.value.dataEsecuzione;\n      this.button_css_status = \"info\";\n      this.getFunction = false;\n    }\n  }\n  onShowCitizenPressed(value) {\n    if (value == false) {\n      this.dialogService.open(ChargeReportModalWindowComponent, {\n        context: {\n          toDialog: this.value\n        },\n      });\n    }\n    //.onClose.subscribe(name => name && this.names.push(name));\n  }\n}\n","<button nbButton [status]=\"button_css_status\" [disabled]=\"isDisabled\" fullWidth\n    (click)=\"onShowCitizenPressed(getFunction)\">\n    {{renderValue}}</button>","import { Component, Input, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { isThisTypeNode } from 'typescript';\nimport { Booking } from '../../../../model/booking';\nimport { Citizen } from '../../../../model/citizen';\nimport { BookingService } from '../../../../shared/booking.service';\nimport { ShowCitizenModalWindowComponent } from '../show-citizen-modal-window/show-citizen-modal-window.component';\n\n@Component({\n  selector: 'ngx-charge-report-modal-window',\n  templateUrl: './charge-report-modal-window.component.html',\n  styleUrls: ['./charge-report-modal-window.component.scss']\n})\nexport class ChargeReportModalWindowComponent implements OnInit {\n  source: LocalDataSource = new LocalDataSource();\n  citizen: Citizen | any = \"\";\n  disabled: boolean;\n  constructor(protected ref: NbDialogRef<ShowCitizenModalWindowComponent>, private booking_service: BookingService) { \n  }\n  @Input() toDialog: Booking;\n\n  ngOnInit(): void {\n    console.log(\"Lo stato in charge report modal window è \" + this.toDialog.status)\n    if (this.toDialog.status == 1) {\n      this.disabled = true;\n    }\n    // this.booking_service.getBookingsById(this.toDialogSSN).subscribe(result => {\n    //   this.citizen = result;\n    //   console.log(this.citizen);\n    //   console.log(this.citizen.ref_categoria);\n    // });\n  }\n  cancel() {\n    this.ref.close(false);\n  }\n\n  submit(firstname, lastname, email, cellphone) {\n    this.citizen.firstname = firstname;\n    this.citizen.lastname = lastname;\n    this.citizen.email = email;\n    this.citizen.cellphone = cellphone;\n    if (confirm(\"Vuoi davvero salvare le modifiche?\")) {\n      //this.citizen_service.updateCitizen(this.citizen).subscribe(() => this.ref.close());\n\n    }\n\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Inserisci report</nb-card-header>\n    <nb-card-body [(ngModel)]=\"toDialog\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputFirstName\" class=\"label\">Nome</label>\n                    <input #firstname type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputFirstName\"\n                        placeholder=\"First Name\" value={{toDialog.cittadino}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputLastName\" class=\"label\">Cognome</label>\n                    <input #lastname type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputLastName\"\n                        placeholder=\"Last Name\" value={{toDialog.cittadino}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Codice fiscale</label>\n                    <input #email type=\"email\" [disabled]=disabled nbInput fullWidth id=\"inputEmail\" placeholder=\"Email\"\n                        value={{toDialog.cittadino}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Codice prenotazione</label>\n                    <input #cellphone type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputWebsite\"\n                        placeholder=\"Website\" value={{toDialog.codicePrenotazione}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Prestazione</label>\n                    <input #indirizzo [disabled]=disabled type=\"email\" nbInput fullWidth placeholder=\"Indirizzo\"\n                        value=\"{{toDialog.prestazione}}\">\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Codice fiscale medico</label>\n                    <input #SSN_medico type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputSSN\"\n                        placeholder=\"Codice fiscale\" value={{citizen.ssn}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Data esecuzione</label>\n                    <input #indirizzo [disabled]=disabled type=\"email\" nbInput fullWidth placeholder=\"Indirizzo\"\n                        value=\"{{toDialog.prestazione}}\">\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Ora esecuzione</label>\n                    <input #SSN_medico type=\"text\" [disabled]=disabled nbInput fullWidth id=\"inputSSN\"\n                        placeholder=\"Codice fiscale\" value={{citizen.ssn}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <textarea rows=\"5\" #sintesi [disabled]=disabled nbInput fullWidth shape=\"round\"\n                placeholder=\"Commento alla prestazione\"></textarea>\n        </div>\n    </nb-card-body>\n    <nb-card-footer>\n        <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Indietro</button>\n        <button nbButton status=\"success\" [disabled]=disabled\n            (click)=\"submit(firstname.value, lastname.value, email.value, cellphone.value)\"> Inserisci</button>\n    </nb-card-footer>\n</nb-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Citizen } from '../../../../model/citizen';\nimport { CitizenService } from '../../../../shared/citizen.service';\n\n@Component({\n  selector: 'ngx-show-citizen-modal-window',\n  templateUrl: './show-citizen-modal-window.component.html',\n  styleUrls: ['./show-citizen-modal-window.component.scss']\n})\nexport class ShowCitizenModalWindowComponent implements OnInit {\n  source: LocalDataSource = new LocalDataSource();\n  citizen: Citizen | any = \"\";// Mi restituiva errori nella console per via del fatto che il cittadino viene fetchato\n  // qualche secondo dopo e risultava essere undefined quindi l'ho inizializzato\n  constructor(protected ref: NbDialogRef<ShowCitizenModalWindowComponent>, private citizen_service: CitizenService) { }\n  @Input() toDialogSSN: any;\n\n  ngOnInit(): void {\n    this.citizen_service.getBySSN(this.toDialogSSN).subscribe(result => {\n      this.citizen = result;\n      console.log(this.citizen);\n      console.log(this.citizen.ref_categoria);\n    });\n  }\n  cancel() {\n    this.ref.close(false);\n  }\n\n  submit(firstname, lastname, email, cellphone) {\n    this.citizen.firstname = firstname;\n    this.citizen.lastname = lastname;\n    this.citizen.email = email;\n    this.citizen.cellphone = cellphone;\n    if (confirm(\"Vuoi davvero salvare le modifiche?\")) {\n      this.citizen_service.updateCitizen(this.citizen).subscribe(() => this.ref.close());\n\n    }\n\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Dettagli cittadino</nb-card-header>\n    <nb-card-body [(ngModel)]=\"citizen\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputFirstName\" class=\"label\">Nome</label>\n                    <input #firstname type=\"text\" disabled nbInput fullWidth id=\"inputFirstName\"\n                        placeholder=\"First Name\" value={{citizen.nome}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputLastName\" class=\"label\">Cognome</label>\n                    <input #lastname type=\"text\" disabled nbInput fullWidth id=\"inputLastName\" placeholder=\"Last Name\"\n                        value={{citizen.cognome}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Email</label>\n                    <input #email type=\"email\" disabled nbInput fullWidth id=\"inputEmail\" placeholder=\"Email\"\n                        value={{citizen.email}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Cellulare</label>\n                    <input #cellphone type=\"text\" disabled nbInput fullWidth id=\"inputWebsite\" placeholder=\"Website\"\n                        value={{citizen.telefono}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Indirizzo</label>\n                    <input #indirizzo disabled type=\"email\" nbInput fullWidth placeholder=\"Indirizzo\"\n                        value=\"via {{citizen.via}} {{citizen.civico}}, {{citizen.comune}}\">\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputWebsite\" class=\"label\">Codice fiscale</label>\n                    <input #SSN type=\"text\" disabled nbInput fullWidth id=\"inputSSN\" placeholder=\"Codice fiscale\"\n                        value={{citizen.ssn}}>\n                </div>\n            </div>\n        </div>\n    </nb-card-body>\n    <nb-card-footer>\n        <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Indietro</button>\n        <button nbButton status=\"success\" disabled\n            (click)=\"submit(firstname.value, lastname.value, email.value, cellphone.value)\">Salva</button>\n    </nb-card-footer>\n</nb-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { MedicalService } from '../../../../model/medical_service';\nimport { MedicalServiceService } from '../../../../shared/medical_service.service';\n@Component({\n  selector: 'ngx-show-medical-service-modal-window',\n  templateUrl: './show-medical-service-modal-window.component.html',\n  styleUrls: ['./show-medical-service-modal-window.component.scss']\n})\nexport class ShowMedicalServiceModalWindowComponent implements OnInit {\n  medicalservice: MedicalService | any = \"\";\n  source: LocalDataSource = new LocalDataSource();\n  @Input() toDialogMedicalServiceName: any;\n\n  constructor(protected ref: NbDialogRef<ShowMedicalServiceModalWindowComponent>, private medicalservice_service: MedicalServiceService) { }\n  names: string[] = [];\n\n\n  ngOnInit(): void {\n    this.medicalservice_service.getByName(this.toDialogMedicalServiceName).subscribe(result => {\n      this.medicalservice = result;\n      console.log(this.medicalservice);\n    });\n  }\n  cancel() {\n    this.ref.close();\n  }\n\n  submit(name) {\n    this.ref.close(name);\n  }\n}","<nb-card>\n    <nb-card-header>Dettagli prestazione</nb-card-header>\n    <nb-card-body [(ngModel)]=\"medicalservice\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputFirstName\" class=\"label\">Prestazione</label>\n                    <input #nome type=\"text\" nbInput fullWidth id=\"inputFirstName\" placeholder=\"First Name\"\n                        value={{medicalservice.nome}}>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputLastName\" class=\"label\">Costo</label>\n                    <input #costo disabled type=\"text\" nbInput fullWidth id=\"inputLastName\" placeholder=\"Last Name\"\n                        value={{medicalservice.costo}}>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"label\">Quantità</label>\n                    <input #giacenza disabled type=\"email\" nbInput fullWidth id=\"inputEmail\" placeholder=\"Email\"\n                        value={{medicalservice.giacenza}}>\n                </div>\n            </div>\n        </div>\n    </nb-card-body>\n    <nb-card-footer>\n        <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Indietro</button>\n        <button nbButton status=\"success\" (click)=\"submit(nome.value)\">Salva</button>\n    </nb-card-footer>\n</nb-card>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BookingListRoutingModule, routedComponents } from '../routing/booking-list-routing.module';\nimport { NbButtonModule, NbCardModule, NbIconModule, NbInputModule } from '@nebular/theme';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\nimport { ShowCitizenButtonComponent } from '../button/show-citizen-button/show-citizen-button.component';\nimport { ShowMedicalServiceButtonComponent } from '../button/show-medical-service-button/show-medical-service-button.component';\n\nimport { ShowCitizenModalWindowComponent } from '../modal_window/show-citizen-modal-window/show-citizen-modal-window.component';\nimport { ShowMedicalServiceModalWindowComponent } from '../modal_window/show-medical-service-modal-window/show-medical-service-modal-window.component';\nimport { ChargeReportStatusButtonComponent } from '../button/charge-report-status-button/charge-report-status-button.component';\nimport { ShowReportStatusComponent } from '../button/show-report-status/show-report-status.component';\nimport { DeleteBookingButtonComponent } from '../button/delete-booking-button/delete-booking-button.component';\nimport { ChargeReportModalWindowComponent } from '../modal_window/charge-report-modal-window/charge-report-modal-window.component';\n\n@NgModule({\n  declarations: [...routedComponents,\n    ShowCitizenButtonComponent, ShowMedicalServiceButtonComponent,\n    ShowCitizenModalWindowComponent, ShowMedicalServiceModalWindowComponent,\n    ChargeReportStatusButtonComponent, ShowReportStatusComponent,\n    DeleteBookingButtonComponent, ChargeReportModalWindowComponent],\n\n  imports: [\n    CommonModule, BookingListRoutingModule, NbCardModule, Ng2SmartTableModule, NbButtonModule, NbIconModule, NbInputModule,\n  ],\n  exports: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class BookingListModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BookingListComponent } from '../booking-list/booking-list.component';\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    component: BookingListComponent,\r\n    children: [\r\n    ],\r\n},\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class BookingListRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n    BookingListComponent,\r\n];\r\n"]}